{
  "version": 3,
  "sources": ["../../@slidev/parser/dist/chunk-YNRNLEBD.mjs"],
  "sourcesContent": ["// src/core.ts\nimport YAML from \"js-yaml\";\n\n// ../../node_modules/.pnpm/@antfu+utils@0.7.7/node_modules/@antfu/utils/dist/index.mjs\nfunction toArray(array) {\n  array = array ?? [];\n  return Array.isArray(array) ? array : [array];\n}\nfunction uniq(array) {\n  return Array.from(new Set(array));\n}\nfunction range(...args) {\n  let start, stop, step;\n  if (args.length === 1) {\n    start = 0;\n    step = 1;\n    [stop] = args;\n  } else {\n    [start, stop, step = 1] = args;\n  }\n  const arr = [];\n  let current = start;\n  while (current < stop) {\n    arr.push(current);\n    current += step || 1;\n  }\n  return arr;\n}\nvar toString = (v) => Object.prototype.toString.call(v);\nfunction notNullish(v) {\n  return v != null;\n}\nvar isNumber = (val) => typeof val === \"number\";\nvar isObject = (val) => toString(val) === \"[object Object]\";\nfunction slash(str) {\n  return str.replace(/\\\\/g, \"/\");\n}\nfunction ensurePrefix(prefix, str) {\n  if (!str.startsWith(prefix))\n    return prefix + str;\n  return str;\n}\nfunction objectMap(obj, fn) {\n  return Object.fromEntries(\n    Object.entries(obj).map(([k, v]) => fn(k, v)).filter(notNullish)\n  );\n}\nvar VOID = Symbol(\"p-void\");\n\n// src/utils.ts\nfunction parseRangeString(total, rangeStr) {\n  if (!rangeStr || rangeStr === \"all\" || rangeStr === \"*\")\n    return range(1, total + 1);\n  if (rangeStr === \"none\")\n    return [];\n  const pages = [];\n  for (const part of rangeStr.split(/[,;]/g)) {\n    if (!part.includes(\"-\")) {\n      pages.push(+part);\n    } else {\n      const [start, end] = part.split(\"-\", 2);\n      pages.push(\n        ...range(+start, !end ? total + 1 : +end + 1)\n      );\n    }\n  }\n  return uniq(pages).filter((i) => i <= total).sort((a, b) => a - b);\n}\nfunction parseAspectRatio(str) {\n  if (isNumber(str))\n    return str;\n  if (!Number.isNaN(+str))\n    return +str;\n  const [wStr = \"\", hStr = \"\"] = str.split(/[:\\/x\\|]/);\n  const w = Number.parseFloat(wStr.trim());\n  const h = Number.parseFloat(hStr.trim());\n  if (Number.isNaN(w) || Number.isNaN(h) || h === 0)\n    throw new Error(`Invalid aspect ratio \"${str}\"`);\n  return w / h;\n}\n\n// src/config.ts\nfunction getDefaultConfig() {\n  return {\n    theme: \"default\",\n    title: \"Slidev\",\n    titleTemplate: \"%s - Slidev\",\n    addons: [],\n    remoteAssets: false,\n    monaco: true,\n    monacoTypesSource: \"local\",\n    monacoTypesAdditionalPackages: [],\n    download: false,\n    export: {},\n    info: false,\n    highlighter: \"shiki\",\n    twoslash: true,\n    lineNumbers: false,\n    colorSchema: \"auto\",\n    routerMode: \"history\",\n    aspectRatio: 16 / 9,\n    canvasWidth: 980,\n    exportFilename: \"\",\n    selectable: false,\n    themeConfig: {},\n    fonts: {},\n    favicon: \"https://cdn.jsdelivr.net/gh/slidevjs/slidev/assets/favicon.png\",\n    drawings: {},\n    plantUmlServer: \"https://www.plantuml.com/plantuml\",\n    codeCopy: true,\n    record: \"dev\",\n    css: \"unocss\",\n    presenter: true,\n    htmlAttrs: {},\n    transition: void 0,\n    editor: true\n  };\n}\nfunction resolveConfig(headmatter, themeMeta = {}, filepath, verify = false) {\n  const themeHightlighter = [\"prism\", \"shiki\", \"shikiji\"].includes(themeMeta.highlighter || \"\") ? themeMeta.highlighter : void 0;\n  const themeColorSchema = [\"light\", \"dark\"].includes(themeMeta.colorSchema || \"\") ? themeMeta.colorSchema : void 0;\n  const defaultConfig = getDefaultConfig();\n  const config = {\n    ...defaultConfig,\n    highlighter: themeHightlighter || defaultConfig.highlighter,\n    colorSchema: themeColorSchema || defaultConfig.colorSchema,\n    ...themeMeta.defaults,\n    ...headmatter.config,\n    ...headmatter,\n    fonts: resolveFonts({\n      ...themeMeta.defaults?.fonts,\n      ...headmatter.config?.fonts,\n      ...headmatter?.fonts\n    }),\n    drawings: resolveDrawings(headmatter.drawings, filepath),\n    htmlAttrs: {\n      ...themeMeta.defaults?.htmlAttrs,\n      ...headmatter.config?.htmlAttrs,\n      ...headmatter?.htmlAttrs\n    }\n  };\n  if (config.highlighter === \"shikiji\") {\n    console.warn(`[slidev] \"shikiji\" is merged back to \"shiki\", you can safely change it \"highlighter: shiki\"`);\n    config.highlighter = \"shiki\";\n  }\n  if (config.colorSchema !== \"dark\" && config.colorSchema !== \"light\")\n    config.colorSchema = \"auto\";\n  if (themeColorSchema && config.colorSchema === \"auto\")\n    config.colorSchema = themeColorSchema;\n  config.aspectRatio = parseAspectRatio(config.aspectRatio);\n  if (verify)\n    verifyConfig(config, themeMeta);\n  return config;\n}\nfunction verifyConfig(config, themeMeta = {}, warn = (v) => console.warn(`[slidev] ${v}`)) {\n  const themeHightlighter = [\"prism\", \"shiki\"].includes(themeMeta.highlighter || \"\") ? themeMeta.highlighter : void 0;\n  const themeColorSchema = [\"light\", \"dark\"].includes(themeMeta.colorSchema || \"\") ? themeMeta.colorSchema : void 0;\n  if (themeColorSchema && config.colorSchema !== themeColorSchema)\n    warn(`Color schema \"${config.colorSchema}\" does not supported by the theme`);\n  if (themeHightlighter && config.highlighter !== themeHightlighter)\n    warn(`Syntax highlighter \"${config.highlighter}\" does not supported by the theme`);\n  if (![\"unocss\", void 0].includes(config.css)) {\n    warn(`Unsupported Atomic CSS engine \"${config.css}\", fallback to UnoCSS`);\n    config.css = \"unocss\";\n  }\n}\nfunction resolveFonts(fonts = {}) {\n  const {\n    fallbacks = true,\n    italic = false,\n    provider = \"google\"\n  } = fonts;\n  let sans = toArray(fonts.sans).flatMap((i) => i.split(/,\\s*/g)).map((i) => i.trim());\n  let serif = toArray(fonts.serif).flatMap((i) => i.split(/,\\s*/g)).map((i) => i.trim());\n  let mono = toArray(fonts.mono).flatMap((i) => i.split(/,\\s*/g)).map((i) => i.trim());\n  const weights = toArray(fonts.weights || \"200,400,600\").flatMap((i) => i.toString().split(/,\\s*/g)).map((i) => i.trim());\n  const custom = toArray(fonts.custom).flatMap((i) => i.split(/,\\s*/g)).map((i) => i.trim());\n  const local = toArray(fonts.local).flatMap((i) => i.split(/,\\s*/g)).map((i) => i.trim());\n  const webfonts = fonts.webfonts ? fonts.webfonts : fallbacks ? uniq([...sans, ...serif, ...mono, ...custom]) : [];\n  webfonts.filter((i) => local.includes(i));\n  function toQuoted(font) {\n    if (/^(['\"]).*\\1$/.test(font))\n      return font;\n    return `\"${font}\"`;\n  }\n  if (fallbacks) {\n    sans = uniq([\n      ...sans.map(toQuoted),\n      \"ui-sans-serif\",\n      \"system-ui\",\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      '\"Noto Sans\"',\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n      '\"Noto Color Emoji\"'\n    ]);\n    serif = uniq([\n      ...serif.map(toQuoted),\n      \"ui-serif\",\n      \"Georgia\",\n      \"Cambria\",\n      '\"Times New Roman\"',\n      \"Times\",\n      \"serif\"\n    ]);\n    mono = uniq([\n      ...mono.map(toQuoted),\n      \"ui-monospace\",\n      \"SFMono-Regular\",\n      \"Menlo\",\n      \"Monaco\",\n      \"Consolas\",\n      '\"Liberation Mono\"',\n      '\"Courier New\"',\n      \"monospace\"\n    ]);\n  }\n  return {\n    sans,\n    serif,\n    mono,\n    webfonts,\n    provider,\n    local,\n    italic,\n    weights\n  };\n}\nfunction resolveDrawings(options = {}, filepath) {\n  const {\n    enabled = true,\n    persist = false,\n    presenterOnly = false,\n    syncAll = true\n  } = options;\n  const persistPath = typeof persist === \"string\" ? persist : persist ? `.slidev/drawings${filepath ? `/${filepath.match(/([^\\\\\\/]+?)(\\.\\w+)?$/)?.[1]}` : \"\"}` : false;\n  return {\n    enabled,\n    persist: persistPath,\n    presenterOnly,\n    syncAll\n  };\n}\n\n// src/core.ts\nfunction stringify(data) {\n  return `${data.slides.map(stringifySlide).join(\"\\n\").trim()}\n`;\n}\nfunction stringifySlide(data, idx = 0) {\n  return data.raw.startsWith(\"---\") || idx === 0 ? data.raw : `---\n${ensurePrefix(\"\\n\", data.raw)}`;\n}\nfunction prettifySlide(data) {\n  const trimed = data.content.trim();\n  data.content = trimed ? `\n${data.content.trim()}\n` : \"\";\n  data.raw = data.frontmatterRaw ? data.frontmatterStyle === \"yaml\" ? `\\`\\`\\`yaml\n${data.frontmatterRaw.trim()}\n\\`\\`\\`\n${data.content}` : `---\n${data.frontmatterRaw.trim()}\n---\n${data.content}` : data.content;\n  if (data.note)\n    data.raw += `\n<!--\n${data.note.trim()}\n-->\n`;\n  return data;\n}\nfunction prettify(data) {\n  data.slides.forEach(prettifySlide);\n  return data;\n}\nfunction safeParseYAML(str) {\n  const res = YAML.load(str);\n  return isObject(res) ? res : {};\n}\nfunction matter(code) {\n  let type;\n  let raw;\n  const data = {};\n  let content = code.replace(/^---.*\\r?\\n([\\s\\S]*?)---/, (_, f) => {\n    type = \"frontmatter\";\n    raw = f;\n    Object.assign(data, safeParseYAML(f));\n    return \"\";\n  });\n  if (type !== \"frontmatter\") {\n    content = content.replace(/^\\s*```ya?ml([\\s\\S]*?)```/, (_, d) => {\n      type = \"yaml\";\n      raw = d;\n      Object.assign(data, safeParseYAML(d));\n      return \"\";\n    });\n  }\n  return {\n    type,\n    raw,\n    data,\n    content\n  };\n}\nfunction detectFeatures(code) {\n  return {\n    katex: !!code.match(/\\$.*?\\$/) || !!code.match(/$\\$\\$/),\n    monaco: !!code.match(/{monaco.*}/),\n    tweet: !!code.match(/<Tweet\\b/),\n    mermaid: !!code.match(/^```mermaid/m)\n  };\n}\nfunction parseSlide(raw) {\n  const matterResult = matter(raw);\n  let note;\n  const frontmatter = matterResult.data || {};\n  let content = matterResult.content.trim();\n  const comments = Array.from(content.matchAll(/<!--([\\s\\S]*?)-->/g));\n  if (comments.length) {\n    const last = comments[comments.length - 1];\n    if (last.index !== void 0 && last.index + last[0].length >= content.length) {\n      note = last[1].trim();\n      content = content.slice(0, last.index).trim();\n    }\n  }\n  let title;\n  let level;\n  if (frontmatter.title || frontmatter.name) {\n    title = frontmatter.title || frontmatter.name;\n  } else {\n    const match = content.match(/^(#+) (.*)$/m);\n    title = match?.[2]?.trim();\n    level = match?.[1]?.length;\n  }\n  if (frontmatter.level)\n    level = frontmatter.level || 1;\n  return {\n    raw,\n    title,\n    level,\n    content,\n    frontmatter,\n    frontmatterStyle: matterResult.type,\n    frontmatterRaw: matterResult.raw,\n    note\n  };\n}\nasync function parse(markdown, filepath, extensions) {\n  const lines = markdown.split(/\\r?\\n/g);\n  const slides = [];\n  let start = 0;\n  async function slice(end) {\n    if (start === end)\n      return;\n    const raw = lines.slice(start, end).join(\"\\n\");\n    const slide = {\n      ...parseSlide(raw),\n      filepath,\n      index: slides.length,\n      start,\n      end\n    };\n    if (extensions) {\n      for (const e of extensions) {\n        if (e.transformSlide) {\n          const newContent = await e.transformSlide(slide.content, slide.frontmatter);\n          if (newContent !== void 0)\n            slide.content = newContent;\n        }\n      }\n    }\n    slides.push(slide);\n    start = end + 1;\n  }\n  if (extensions) {\n    for (const e of extensions) {\n      if (e.transformRawLines)\n        await e.transformRawLines(lines);\n    }\n  }\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trimEnd();\n    if (line.match(/^---+/)) {\n      await slice(i);\n      const next = lines[i + 1];\n      if (line.match(/^---([^-].*)?$/) && !next?.match(/^\\s*$/)) {\n        start = i;\n        for (i += 1; i < lines.length; i++) {\n          if (lines[i].trimEnd().match(/^---$/))\n            break;\n        }\n      }\n    } else if (line.startsWith(\"```\")) {\n      for (i += 1; i < lines.length; i++) {\n        if (lines[i].startsWith(\"```\"))\n          break;\n      }\n    }\n  }\n  if (start <= lines.length - 1)\n    await slice(lines.length);\n  return {\n    filepath,\n    raw: markdown,\n    slides\n  };\n}\nfunction mergeFeatureFlags(a, b) {\n  return objectMap(a, (k, v) => [k, v || b[k]]);\n}\n\nexport {\n  slash,\n  parseRangeString,\n  parseAspectRatio,\n  getDefaultConfig,\n  resolveConfig,\n  verifyConfig,\n  resolveFonts,\n  stringify,\n  stringifySlide,\n  prettifySlide,\n  prettify,\n  detectFeatures,\n  parseSlide,\n  parse,\n  mergeFeatureFlags\n};\n"],
  "mappings": "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",
  "names": []
}
